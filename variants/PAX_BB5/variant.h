/*
 *******************************************************************************
 * Copyright (c) 2021, STMicroelectronics
 * All rights reserved.
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 *******************************************************************************
 *
 * Copyright (c) 2021, CalinRadoni (https://github.com/CalinRadoni)
 * 
 * This file is part of PAX_BB5 Arduino Variant (https://github.com/CalinRadoni/pax-BB5)
 * Original file was heavily modified for pax-BB5 board (STM32L051K8T MCU)
 *
 *******************************************************************************
 */

#ifndef _VARIANT_ARDUINO_STM32_
#define _VARIANT_ARDUINO_STM32_

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

/**
 * @brief Returns the exit code generated by calling SystemClock_Config
 *
 * The SystemClock_Config function will set an exit code with the bits as follow:
 * - bit 0 set = function was called
 * - bit 1 set = HAL_RCC_OscConfig execution error
 * - bit 2 set = HAL_RCC_ClockConfig execution error
 * - bit 3 set = HAL_RCCEx_PeriphCLKConfig execution error
 */
unsigned char SystemClock_Config_ExitCode(void);

/*----------------------------------------------------------------------------
 * STM32 pins
 *----------------------------------------------------------------------------*/

#define PA8   0  // User switch
#define PA9   1  // USART1 Tx
#define PA10  2  // USART1 Rx
#define PA11  3
#define PA12  4
#define PB3   5
#define PB4   6
#define PB5   7
#define PB6   8  // SCL
#define PB7   9  // SDA
#define PA0   A0 // ADC_IN0, T2C1
#define PA1   A1 // ADC_IN1, T2C2
#define PA2   A2 // ADC_IN2, T2C3
#define PA3   A3 // ADC_IN3, T2C4
#define PA15  14 // User LED
#define PB1   15 // IntRadio
#define PB0   16 // CSRadio
#define PA4   17 // CSMemory
#define PA5   18 // SPI1_SCK
#define PA6   19 // SPI1_MISO
#define PA7   20 // SPI1_MOSI
#define PA13  21 // SWDIO
#define PA14  22 // SWCLK
// PC14 not connected
// PC15 not connected

#define NUM_DIGITAL_PINS        23
#define NUM_ANALOG_INPUTS       4

// On-board LED pin number
#define LED_BUILTIN             PA15

// On-board user button
#define USER_BTN                PA8

// SPI definitions
#define PIN_SPI_SS_Mem          PA4
#define PIN_SPI_SS_Radio        PB0
#define PIN_SPI_SCK             PA5
#define PIN_SPI_MISO            PA6
#define PIN_SPI_MOSI            PA7
#define PIN_SPI_SS              PA4
#define PIN_SPI_SS1             PB0

// I2C definitions
#define PIN_WIRE_SDA            PB7
#define PIN_WIRE_SCL            PB6

// UART Definitions
#define SERIAL_UART_INSTANCE    1
// Default pin used for generic 'Serial' instance, mandatory for Firmata
#define PIN_SERIAL_RX           PA10
#define PIN_SERIAL_TX           PA9

// Timer Definitions
// Use TIM6/TIM7 when possible as servo and tone don't need GPIO output pin
#define TIMER_TONE              TIM6
#define TIMER_SERVO             TIM21

#ifdef __cplusplus
}
#endif

/*----------------------------------------------------------------------------
 * Arduino objects - C++ only
 *----------------------------------------------------------------------------*/

#ifdef __cplusplus
  // These serial port names are intended to allow libraries and architecture-neutral
  // sketches to automatically default to the correct port name for a particular type
  // of use.  For example, a GPS module would normally connect to SERIAL_PORT_HARDWARE_OPEN,
  // the first hardware serial port whose RX/TX pins are not dedicated to another use.
  //
  // SERIAL_PORT_MONITOR        Port which normally prints to the Arduino Serial Monitor
  //
  // SERIAL_PORT_USBVIRTUAL     Port which is USB virtual serial
  //
  // SERIAL_PORT_LINUXBRIDGE    Port which connects to a Linux system via Bridge library
  //
  // SERIAL_PORT_HARDWARE       Hardware serial port, physical RX & TX pins.
  //
  // SERIAL_PORT_HARDWARE_OPEN  Hardware serial ports which are open for use.  Their RX & TX
  //                            pins are NOT connected to anything by default.
  #define SERIAL_PORT_MONITOR       Serial
  #define SERIAL_PORT_HARDWARE      Serial
  #define SERIAL_PORT_HARDWARE_OPEN Serial
#endif

#endif /* _VARIANT_ARDUINO_STM32_ */
